[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ethan\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ethan\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 1.8.0_333)
[debug]       Load.loadUnit: plugins took 68.0992ms
[debug]       Load.loadUnit: defsScala took 0.247999ms
[debug] [Loading] Scanning directory C:\Users\ethan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ethan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.6699 ms
[debug]           Load.resolveProject(global-plugins) took 40.2549ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ethan\.sbt\1.0\plugins, plugins: List(<none>))) took 148.3626ms
[debug] [Loading] Done in C:\Users\ethan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 166.171ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.206199ms
[debug]     Load.loadUnit(file:/C:/Users/ethan/.sbt/1.0/plugins/, ...) took 241.3004ms
[debug]   Load.apply: load took 385.386201ms
[debug]   Load.apply: resolveProjects took 5.1997ms
[debug]   Load.apply: finalTransforms took 44.4911ms
[debug]   Load.apply: config.delegates took 6.536401ms
[debug]   Load.apply: Def.make(settings)... took 279.851301ms
[debug]   Load.apply: structureIndex took 76.0657ms
[debug]   Load.apply: mkStreams took 2.073899ms
[info] loading global plugins from C:\Users\ethan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 17360.4909ms
[debug]           Load.loadUnit: plugins took 19.5366ms
[debug]           Load.loadUnit: defsScala took 0.003799ms
[debug] [Loading] Scanning directory C:\Users\ethan\OverwatchGame\project
[debug]             Load.loadUnit: mkEval took 9.7997ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ethan\OverwatchGame\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2862 ms
[info] loading settings for project overwatchgame-build from idea.sbt ...
[debug]               Load.resolveProject(overwatchgame-build) took 3.6989ms
[debug]             Load.loadTransitive: finalizeProject(Project(id overwatchgame-build, base: C:\Users\ethan\OverwatchGame\project, plugins: List(<none>))) took 6.731001ms
[debug] [Loading] Done in C:\Users\ethan\OverwatchGame\project, returning: (overwatchgame-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1806.6671ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.8293ms
[debug]         Load.loadUnit(file:/C:/Users/ethan/OverwatchGame/project/, ...) took 1831.9445ms
[debug]       Load.apply: load took 1833.4751ms
[debug]       Load.apply: resolveProjects took 0.1271ms
[debug]       Load.apply: finalTransforms took 6.172401ms
[debug]       Load.apply: config.delegates took 0.4593ms
[debug]       Load.apply: Def.make(settings)... took 68.6418ms
[debug]       Load.apply: structureIndex took 20.8309ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\ethan\OverwatchGame\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3432.684ms
[debug]     Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory C:\Users\ethan\OverwatchGame
[debug]       Load.loadUnit: mkEval took 0.2915ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3803 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 27.3003ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ethan\OverwatchGame, plugins: List(<none>))) took 30.5803ms
[debug] [Loading] Done in C:\Users\ethan\OverwatchGame, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1371.8839ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.8181ms
[debug]   Load.loadUnit(file:/C:/Users/ethan/OverwatchGame/, ...) took 4821.2119ms
[debug] Load.apply: load took 4822.733199ms
[debug] Load.apply: resolveProjects took 0.1076ms
[debug] Load.apply: finalTransforms took 47.1351ms
[debug] Load.apply: config.delegates took 0.2528ms
[debug] Load.apply: Def.make(settings)... took 65.552799ms
[debug] Load.apply: structureIndex took 14.9501ms
[debug] Load.apply: mkStreams took 0.003101ms
[info] set current project to OverwatchGame (in build file:/C:/Users/ethan/OverwatchGame/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56525 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56525, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OverwatchGame (in build file:/C:/Users/ethan/OverwatchGame/)
[debug] > Exec(idea-shell, None, None)
